// Generated by CoffeeScript 1.6.3
(function() {
  var pn, template;

  pn = angular.module('push.notice', []);

  pn.service("Notifier", [
    '$rootScope', function($rootScope) {
      this.notice = function(message) {
        return $rootScope.$broadcast("push:notice", message);
      };
      this.warn = function(message) {
        return $rootScope.$broadcast("push:warning", message);
      };
      return this;
    }
  ]);

  template = "\<div class=\"push {{message.style}}\">  <div class=\"message\">{{message.message}}</div>  <i ng-click=\"hide()\" class=\"ui basic circular icon link close\"></i></div>";

  pn.directive("push", function() {
    return {
      restrict: 'E',
      replace: true,
      scope: {
        message: '='
      },
      template: template,
      require: '^notifications',
      link: function(scope, el, attrs, ctrl) {
        return scope.hide = function() {
          return ctrl.hide(scope.message.id);
        };
      }
    };
  });

  pn.directive("notifications", function() {
    return {
      restrict: 'E',
      replace: true,
      scope: {},
      template: "<div class=\"notifications\"><push ng-repeat=\"push in notes\" message=\"push\"></push></div>",
      controller: 'pushCtrl',
      link: function(scope, el, attrs) {
        scope.$on("push:notice", function(event, msg) {
          return scope.push('notice', msg);
        });
        return scope.$on("push:warning", function(event, msg) {
          return scope.push('warning', msg);
        });
      }
    };
  });

  pn.controller('pushCtrl', [
    '$scope', '$element', '$timeout', function($scope, $element, $timeout) {
      $scope.notes = [];
      $scope.timers = [];
      $scope.push = function(style, message) {
        var id;
        id = _.random(1000);
        $scope.notes.push({
          id: id,
          style: style,
          message: message
        });
        return $scope.timer(id);
      };
      $scope.timer = function(id) {
        return $scope.timers[id] = $timeout(function() {
          return _.remove($scope.notes, {
            id: id
          });
        }, 10000);
      };
      this.hide = function(id) {
        $timeout.cancel($scope.timers[id]);
        return _.remove($scope.notes, {
          id: id
        });
      };
    }
  ]);

}).call(this);
